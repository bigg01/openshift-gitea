apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: gogs
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gogs
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: gogs
    name: gogs
  spec:
    ports:
    - name: ssh
      port: 22
      protocol: TCP
      targetPort: 2222
    - name: gogs
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: gogs
      deploymentconfig: gogs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gogs
    name: gogs
  spec:
    replicas: 1
    selector:
      app: gogs
      deploymentconfig: gogs
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gogs
          deploymentconfig: gogs
      spec:
        containers:
        - args:
          - /app/gogs/openshift/gogs.sh
          env:
          - name: GOGS_SERVER__ROOT_URL
            value: ${GOGS_SERVER_ROOT_URL}
          - name: GOGS_SERVER__DOMAIN
            value: ${GOGS_SERVER_DOMAIN}
          - name: GOGS_LOG_CONSOLE__LEVEL
            value: ${GOGS_LOG_CONSOLE_LEVEL}
          - name: GOGS_RUN_MODE
            value: prod
          - name: GOGS_SECURITY__SECRET_KEY
            value: ${GOGS_SECURITY__SECRET_KEY}
          image: ${GOGS_IMAGE}
          imagePullPolicy: Always
          name: gogs
          ports:
          - containerPort: 8080
            name: gogs
            protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data
            name: data
        - args:
          - /app/gogs/openshift/opensshd.sh
          image: ${GOGS_IMAGE}
          imagePullPolicy: Always
          name: sshd
          ports:
          - containerPort: 2222
            protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: gogs
        serviceAccountName: gogs
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/data/gogs
          name: data
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - gogs
        - sshd
        from:
          kind: ImageStreamTag
          name: gogs:latest
      type: ImageChange
  status: {}
parameters:
- name: GOGS_SECURITY__SECRET_KEY
  description: Secret key for gogs
  generate: expression
  from: "[a-zA-Z0-9-_]{32}"
  required: true
- name: GOGS_IMAGE
  value: ibotty/gogs:latest
  description: The docker image to use
  required: true
- name: APPLICATION_DOMAIN
  value: ""
  description: The exposed hostname that will route to the gogs service, if left blank a value will be defaulted.
  required: true
- name: GOGS_SERVER__DOMAIN
  value: http://${APPLICATION_DOMAIN}
  required: true
- name: GOGS_LOG_CONSOLE__LEVEL
  value: info
  description: Gogs Loglevel
  required: true
- name: GOGS_RUN_MODE
  value: prod
  required: true
